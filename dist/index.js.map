{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isProbabilityf = require( '@stdlib/math-base-assert-is-probabilityf' );\nvar isnanf = require( '@stdlib/math-base-assert-is-nanf' );\nvar lnf = require( '@stdlib/math-base-special-lnf' );\nvar float64ToFloat32 = require( '@stdlib/number-float64-base-to-float32' );\nvar PINF = require( '@stdlib/constants-float32-pinf' );\nvar NINF = require( '@stdlib/constants-float32-ninf' );\n\n\n// MAIN //\n\n/**\n* Computes the logit function for a single-precision floating-point number.\n*\n* @param {Probability} p - input value\n* @returns {number} function value\n*\n* @example\n* var y = logitf( 0.2 );\n* // returns ~-1.386\n*\n* @example\n* var y = logitf( 0.9 );\n* // returns ~2.197\n*\n* @example\n* var y = logitf( -4.0 );\n* // returns NaN\n*\n* @example\n* var y = logitf( 1.5 );\n* // returns NaN\n*\n* @example\n* var y = logitf( NaN );\n* // returns NaN\n*/\nfunction logitf( p ) {\n\tif ( isnanf( p ) ) {\n\t\treturn p;\n\t}\n\tif ( !isProbabilityf( p ) ) {\n\t\treturn NaN;\n\t}\n\tif ( p === 0.0 ) {\n\t\treturn NINF;\n\t}\n\tif ( p === 1.0 ) {\n\t\treturn PINF;\n\t}\n\treturn lnf( float64ToFloat32( p / float64ToFloat32( 1.0-p ) ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = logitf;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the logit function for a single-precision floating-point number.\n*\n* @module @stdlib/math-base-special-logitf\n*\n* @example\n* var logitf = require( '@stdlib/math-base-special-logitf' );\n*\n* var y = logitf( 0.2 );\n* // returns ~-1.386\n*\n* y = logitf( 0.9 );\n* // returns ~2.197\n*\n* y = logitf( -4.0 );\n* // returns NaN\n*\n* y = logitf( 1.5 );\n* // returns NaN\n*\n* y = logitf( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAiB,QAAS,0CAA2C,EACrEC,EAAS,QAAS,kCAAmC,EACrDC,EAAM,QAAS,+BAAgC,EAC/CC,EAAmB,QAAS,wCAAyC,EACrEC,EAAO,QAAS,gCAAiC,EACjDC,EAAO,QAAS,gCAAiC,EA+BrD,SAASC,EAAQC,EAAI,CACpB,OAAKN,EAAQM,CAAE,EACPA,EAEFP,EAAgBO,CAAE,EAGnBA,IAAM,EACHF,EAEHE,IAAM,EACHH,EAEDF,EAAKC,EAAkBI,EAAIJ,EAAkB,EAAII,CAAE,CAAE,CAAE,EARtD,GAST,CAKAR,EAAO,QAAUO,IC/BjB,IAAIE,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isProbabilityf", "isnanf", "lnf", "float64ToFloat32", "PINF", "NINF", "logitf", "p", "main"]
}
